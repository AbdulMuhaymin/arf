"use strict";app.config(["$httpProvider",function($httpProvider){$httpProvider.defaults.useXDomain=true;$httpProvider.defaults.xsrfCookieName="csrftoken";$httpProvider.defaults.xsrfHeaderName="X-CSRFToken";delete $httpProvider.defaults.headers.common["X-Requested-With"]}]);angular.module("materialsCloudApp").factory("authService",["$q","$http","$cookies","$rootScope","utils","CONFIG",function($q,$http,$cookies,$rootScope,utils,CONFIG){var user=null;var service={isSignedIn:function(){var tok=$cookies.get(CONFIG.CONSTANT.AUTH.TOKEN);if(tok===undefined){$rootScope.$broadcast(CONFIG.EVENT_TYPE.AUTH.TOKEN_EXPIRED);return false}else return true},setUser:function(token){var expiryTime=new Date;expiryTime.setHours(expiryTime.getHours()+CONFIG.CONSTANT.AUTH.EXPIRY_HOURS);$cookies.put(CONFIG.CONSTANT.AUTH.TOKEN,token,{expires:expiryTime})},resetUser:function(){user=null;$cookies.remove(CONFIG.CONSTANT.AUTH.TOKEN)},signin:function(email,password){var deferred=$q.defer();$http.post(utils.getRestServerEndpoint()+CONFIG.REST_API.AUTH.SIGNIN,{email:email,password:password}).then(function successCallback(response){console.log(response);var token=response.data.response;service.setUser(token);$rootScope.$broadcast(CONFIG.EVENT_TYPE.AUTH.SIGNIN_SUCCESS);deferred.resolve(response.data)},function errorCallback(response){$rootScope.$broadcast(CONFIG.EVENT_TYPE.AUTH.SIGNIN_FAILURE);deferred.reject(response)});return deferred.promise},signInAsGuest:function(){var deferred=$q.defer();$http.get(utils.getRestServerEndpoint()+CONFIG.REST_API.AUTH.SIGNIN).then(function successCallback(response){var token=response.data.response;service.setUser(token);$rootScope.$broadcast(CONFIG.EVENT_TYPE.AUTH.SIGNIN_SUCCESS);deferred.resolve(response.data)},function errorCallback(response){$rootScope.$broadcast(CONFIG.EVENT_TYPE.AUTH.SIGNIN_FAILURE);deferred.reject(response)});return deferred.promise},testSignInAsGuest:function(serverEndpoint){var deferred=$q.defer();$http.get(serverEndpoint+CONFIG.REST_API.AUTH.SIGNIN).then(function successCallback(response){deferred.resolve(response.data)},function errorCallback(response){deferred.reject(response)});return deferred.promise},signout:function(token){var self=this;var deferred=$q.defer();setTimeout(function(){service.resetUser();$rootScope.$broadcast(CONFIG.EVENT_TYPE.AUTH.SIGNOUT_SUCCESS);deferred.resolve()},200);return deferred.promise},signup:function(email,password,first_name,last_name,institute){var deferred=$q.defer();$http.post(utils.getRestServerEndpoint()+CONFIG.REST_API.AUTH.SIGNUP,{email:email,password:password,first_name:first_name,last_name:last_name,institute:institute}).then(function successCallback(response){console.log(response);$rootScope.$broadcast(CONFIG.EVENT_TYPE.AUTH.SIGNUP_SUCCESS);deferred.resolve({user:response.data.response})},function errorCallback(response){$rootScope.$broadcast(CONFIG.EVENT_TYPE.AUTH.SIGNUP_FAILURE);deferred.reject(response)});return deferred.promise}};return service}]);